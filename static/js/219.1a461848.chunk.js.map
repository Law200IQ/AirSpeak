{"version":3,"file":"static/js/219.1a461848.chunk.js","mappings":"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","sources":["components/CallHistory.js","components/Support.js","components/Report.js","components/ChatInterface.js","components/VoiceChat.js"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Typography,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Switch,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport {\n  Call as CallIcon,\n  Close as CloseIcon,\n} from '@mui/icons-material';\nimport * as Flags from 'country-flag-icons/react/3x2';\n\nconst StyledDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialog-paper': {\n    backgroundColor: '#1C1C2D',\n    color: 'white',\n    minWidth: '400px',\n    maxWidth: '500px',\n  },\n}));\n\nconst CallHistoryItem = styled(ListItem)(({ theme }) => ({\n  borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n  padding: '16px',\n  '&:last-child': {\n    borderBottom: 'none',\n  },\n}));\n\nconst CallButton = styled(IconButton)(({ theme }) => ({\n  backgroundColor: '#4CAF50',\n  color: 'white',\n  padding: '8px',\n  '&:hover': {\n    backgroundColor: '#388E3C',\n  },\n}));\n\nconst CallHistory = ({ open, onClose, callHistory = [], onCallUser }) => {\n  const formatDate = (timestamp) => {\n    const date = new Date(timestamp);\n    return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\n  };\n\n  const renderFlag = (countryCode) => {\n    if (!countryCode) return null;\n    const Flag = Flags[countryCode];\n    return Flag ? (\n      <Box\n        component=\"span\"\n        sx={{\n          display: 'inline-block',\n          width: '24px',\n          height: '16px',\n          marginRight: '8px',\n          verticalAlign: 'middle'\n        }}\n      >\n        <Flag />\n      </Box>\n    ) : null;\n  };\n\n  return (\n    <StyledDialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle sx={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: 'center',\n        borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n      }}>\n        <Typography variant=\"h6\">Call History</Typography>\n        <IconButton onClick={onClose} sx={{ color: 'white' }}>\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent sx={{ p: 0 }}>\n        <Box sx={{ p: 2, borderBottom: '1px solid rgba(255, 255, 255, 0.1)' }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Switch \n              defaultChecked \n              size=\"small\"\n              sx={{\n                '& .MuiSwitch-switchBase.Mui-checked': {\n                  color: '#6C5DD3',\n                },\n                '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {\n                  backgroundColor: '#6C5DD3',\n                },\n              }}\n            />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Allow Incoming Call Requests\n            </Typography>\n          </Box>\n        </Box>\n        {callHistory.length === 0 ? (\n          <Box sx={{ py: 2, textAlign: 'center' }}>\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              No call history available\n            </Typography>\n          </Box>\n        ) : (\n          <List sx={{ py: 0 }}>\n            {callHistory.map((call, index) => (\n              <CallHistoryItem key={index} disableGutters>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                  {renderFlag(call.participantCountries[1])}\n                  <ListItemText\n                    primary={call.participantCountries[1]}\n                    secondary={\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {formatDate(call.startTime)}\n                      </Typography>\n                    }\n                  />\n                </Box>\n                <ListItemSecondaryAction>\n                  <CallButton\n                    size=\"small\"\n                    onClick={() => onCallUser(call.participants[1])}\n                  >\n                    <CallIcon fontSize=\"small\" />\n                  </CallButton>\n                </ListItemSecondaryAction>\n              </CallHistoryItem>\n            ))}\n          </List>\n        )}\n      </DialogContent>\n    </StyledDialog>\n  );\n};\n\nexport default CallHistory;\n","import React from 'react';\nimport {\n  Box,\n  Typography,\n  Dialog,\n  DialogContent,\n  IconButton,\n  Button,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Close as CloseIcon } from '@mui/icons-material';\n\nconst StyledDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialog-paper': {\n    backgroundColor: '#1C1C2D',\n    color: 'white',\n    minWidth: '400px',\n    maxWidth: '500px',\n    borderRadius: '12px',\n    margin: '16px',\n    [theme.breakpoints.down('sm')]: {\n      minWidth: 'calc(100% - 32px)',\n      margin: '16px',\n    },\n  },\n}));\n\nconst PaypalButton = styled(Button)(({ theme }) => ({\n  backgroundColor: '#0070BA',\n  color: 'white',\n  padding: '12px 24px',\n  borderRadius: '24px',\n  textTransform: 'none',\n  fontSize: '16px',\n  marginTop: '24px',\n  display: 'flex',\n  alignItems: 'center',\n  gap: '8px',\n  position: 'relative',\n  overflow: 'hidden',\n  transition: 'all 0.3s ease',\n  whiteSpace: 'nowrap',\n  [theme.breakpoints.down('sm')]: {\n    fontSize: '14px',\n    padding: '10px 20px',\n  },\n  '&:hover': {\n    backgroundColor: '#005ea6',\n    transform: 'translateY(-2px)',\n    boxShadow: '0 4px 12px rgba(0, 112, 186, 0.4)',\n    '&::before': {\n      transform: 'translateX(100%)',\n    }\n  },\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    top: 0,\n    left: '-100%',\n    width: '100%',\n    height: '100%',\n    background: 'linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent)',\n    transition: 'transform 0.5s ease',\n  }\n}));\n\nconst Support = ({ open, onClose }) => {\n  const handlePaypalSupport = () => {\n    // Replace with your PayPal.me link\n    window.open('https://paypal.me/YourPayPalLink', '_blank');\n  };\n\n  return (\n    <StyledDialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogContent sx={{ \n        p: { xs: 2, sm: 4 },\n        '& .MuiTypography-root': {\n          fontSize: { xs: '14px', sm: '16px' },\n        },\n        '& .MuiTypography-h5': {\n          fontSize: { xs: '20px', sm: '24px' },\n        },\n      }}>\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <IconButton onClick={onClose} sx={{ color: 'white' }}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n\n        <Box sx={{ textAlign: 'center', mb: 3 }}>\n          <Typography variant=\"h5\" sx={{ mb: 2 }}>\n            Support AirSpeak 🎉\n          </Typography>\n        </Box>\n\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\n          Dear AirSpeak Community,\n        </Typography>\n\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\n          Your support is the lifeblood of AirSpeak, and we're grateful for your contributions. \n          Whether through donations or other means, your involvement plays a vital role in enhancing and \n          maintaining our platform.\n        </Typography>\n\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\n          Your generosity assists us in:\n        </Typography>\n\n        <Box component=\"ul\" sx={{ mb: 3, pl: 3 }}>\n          <Typography component=\"li\" sx={{ mb: 1 }}>\n            Advancing the platform with new features\n          </Typography>\n          <Typography component=\"li\" sx={{ mb: 1 }}>\n            Ensuring a seamless and enjoyable experience\n          </Typography>\n          <Typography component=\"li\" sx={{ mb: 1 }}>\n            Supporting ongoing operations and infrastructure\n          </Typography>\n        </Box>\n\n        <Typography variant=\"body1\" sx={{ mb: 3 }}>\n          We deeply appreciate your commitment to AirSpeak's success. Every form of support, \n          big or small, contributes to our continued growth and sustainability.\n        </Typography>\n\n        <Box sx={{ textAlign: 'center' }}>\n          <PaypalButton\n            onClick={handlePaypalSupport}\n            startIcon={\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12 2L15 8L21 9L16.5 14L18 20L12 17L6 20L7.5 14L3 9L9 8L12 2Z\" fill=\"currentColor\"/>\n              </svg>\n            }\n          >\n            Fuel Our Journey 🚀\n          </PaypalButton>\n          <Typography variant=\"caption\" sx={{ display: 'block', mt: 2, color: 'text.secondary' }}>\n            Every star you add brightens our path forward\n          </Typography>\n        </Box>\n      </DialogContent>\n    </StyledDialog>\n  );\n};\n\nexport default Support;\n","import React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Box,\n  Typography,\n  IconButton,\n  Button,\n} from '@mui/material';\nimport { Close as CloseIcon } from '@mui/icons-material';\nimport { styled } from '@mui/material/styles';\nimport Flags from 'country-flag-icons/react/3x2';\n\nconst StyledDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialog-paper': {\n    backgroundColor: '#8FE5FF',\n    borderRadius: '12px',\n    maxWidth: '400px',\n    width: '100%',\n  },\n}));\n\nconst CloseButton = styled(IconButton)({\n  position: 'absolute',\n  right: 8,\n  top: 8,\n  color: '#000',\n});\n\nconst ReportButton = styled(Button)({\n  backgroundColor: '#FF4B4B',\n  color: '#fff',\n  padding: '8px 24px',\n  borderRadius: '20px',\n  textTransform: 'none',\n  '&:hover': {\n    backgroundColor: '#E53E3E',\n  },\n});\n\nconst Report = ({ open, onClose, reportData, onReport }) => {\n  const handleReport = () => {\n    if (reportData && onReport) {\n      onReport(reportData);\n    }\n    onClose();\n  };\n\n  return (\n    <StyledDialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>\n        <Typography variant=\"h6\" component=\"div\" sx={{ color: '#000', fontWeight: 'bold' }}>\n          Report ID\n        </Typography>\n        <CloseButton onClick={onClose}>\n          <CloseIcon />\n        </CloseButton>\n      </DialogTitle>\n      <DialogContent>\n        <Box sx={{ mb: 2 }}>\n          <Typography variant=\"body1\" sx={{ color: '#000', mb: 1 }}>\n            {reportData?.id || 'No ID available'}\n          </Typography>\n        </Box>\n\n        <Box sx={{ mb: 2 }}>\n          <Typography variant=\"h6\" sx={{ color: '#000', mb: 1 }}>\n            Origin Country\n          </Typography>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            {reportData?.countryCode && React.createElement(Flags[reportData.countryCode], {\n              style: { width: 24, height: 24 }\n            })}\n            <Typography variant=\"body1\" sx={{ color: '#000' }}>\n              {reportData?.countryCode || 'Unknown'}\n            </Typography>\n          </Box>\n        </Box>\n\n        <Typography variant=\"body1\" sx={{ color: '#000', mb: 2 }}>\n          If you find any prohibited activities on the website that require immediate attention, please file a report and also email (info@airtalk.live) us with the Report ID.\n        </Typography>\n\n        <Typography variant=\"body1\" sx={{ color: '#000', mb: 3 }}>\n          False reports may result in penalties for both parties. We store information for proper investigation.\n        </Typography>\n\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <ReportButton onClick={handleReport}>\n            Report\n          </ReportButton>\n        </Box>\n      </DialogContent>\n    </StyledDialog>\n  );\n};\n\nexport default Report;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Box,\n  IconButton,\n  Typography,\n  Checkbox,\n  Button,\n  TextField,\n  Paper,\n} from '@mui/material';\nimport {\n  Call as CallIcon,\n  Mic as MicIcon,\n  MicOff as MicOffIcon,\n  Warning as WarningIcon,\n  Send as SendIcon,\n} from '@mui/icons-material';\nimport * as Flags from 'country-flag-icons/react/3x2';\nimport { styled } from '@mui/material/styles';\nimport { toast } from 'react-toastify';\nimport CallHistory from './CallHistory';\nimport Support from './Support';\nimport Report from './Report';\n\nconst ChatContainer = styled(Box)(({ theme }) => ({\n  width: '800px',\n  height: '500px',\n  display: 'flex',\n  backgroundColor: '#1C1C2D',\n  borderRadius: '12px',\n  overflow: 'hidden',\n  [theme.breakpoints.down('md')]: {\n    width: '100%',\n    height: '100vh',\n    borderRadius: 0,\n    flexDirection: 'column',\n  },\n}));\n\nconst CallSection = styled(Box)(({ theme }) => ({\n  width: '350px',\n  padding: '24px',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n  [theme.breakpoints.down('md')]: {\n    width: '100%',\n    borderRight: 'none',\n    borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n  },\n}));\n\nconst ChatSection = styled(Box)(({ theme }) => ({\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  backgroundColor: '#242444',\n}));\n\nconst MessageList = styled(Box)({\n  flex: 1,\n  padding: '16px',\n  overflowY: 'auto',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '8px',\n  '&::-webkit-scrollbar': {\n    width: '4px',\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'rgba(255, 255, 255, 0.05)',\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: 'rgba(255, 255, 255, 0.2)',\n    borderRadius: '2px',\n  },\n});\n\nconst MessageBubble = styled(Paper)(({ isUser }) => ({\n  padding: '8px 12px',\n  backgroundColor: isUser ? '#6C5DD3' : 'rgba(255, 255, 255, 0.1)',\n  color: '#fff',\n  borderRadius: '12px',\n  maxWidth: '80%',\n  alignSelf: isUser ? 'flex-end' : 'flex-start',\n}));\n\nconst MessageInput = styled(Box)({\n  padding: '16px',\n  borderTop: '1px solid rgba(255, 255, 255, 0.1)',\n  display: 'flex',\n  gap: '8px',\n});\n\nconst LogoText = styled(Typography)(({ theme }) => ({\n  color: 'white',\n  fontSize: '28px',\n  fontWeight: 'bold',\n  letterSpacing: '0.5px',\n  marginBottom: '16px',\n  '& span': {\n    color: '#6C5DD3',\n  },\n  [theme.breakpoints.down('sm')]: {\n    fontSize: '24px',\n  },\n}));\n\nconst ActionButtons = styled(Box)({\n  display: 'flex',\n  gap: '20px',\n  justifyContent: 'center',\n  marginTop: '24px',\n  marginBottom: '24px',\n});\n\nconst ActionButton = styled(IconButton)(({ color = 'primary', active }) => ({\n  backgroundColor: active ? '#FF4B4B' :\n                  color === 'call' ? '#4CAF50' : \n                  color === 'mute' ? '#6C5DD3' : \n                  color === 'report' ? '#FF9800' : \n                  'rgba(255, 255, 255, 0.1)',\n  color: '#fff',\n  padding: '12px',\n  width: '56px',\n  height: '56px',\n  '&:hover': {\n    backgroundColor: active ? '#E53E3E' :\n                    color === 'call' ? '#388E3C' : \n                    color === 'mute' ? '#5648B2' : \n                    color === 'report' ? '#F57C00' : \n                    'rgba(255, 255, 255, 0.2)',\n  },\n  '& .MuiSvgIcon-root': {\n    fontSize: '24px',\n  },\n}));\n\nconst Controls = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  gap: '12px',\n});\n\nconst StyledTextField = styled(TextField)({\n  '& .MuiInputBase-root': {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    borderRadius: '24px',\n    color: '#fff',\n  },\n  '& .MuiOutlinedInput-notchedOutline': {\n    borderColor: 'rgba(255, 255, 255, 0.1)',\n  },\n  '& .MuiInputBase-input': {\n    padding: '12px 16px',\n  },\n});\n\nconst SendButton = styled(IconButton)({\n  backgroundColor: '#6C5DD3',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#5648B2',\n  },\n  padding: '8px',\n});\n\nconst ChatInterface = ({ micStatus, socket, isInCall, setIsInCall }) => {\n  const [autoCall, setAutoCall] = useState(true);\n  const [showCallHistory, setShowCallHistory] = useState(false);\n  const [showSupport, setShowSupport] = useState(false);\n  const [showReport, setShowReport] = useState(false);\n  const [reportData, setReportData] = useState(null);\n  const [callHistory, setCallHistory] = useState([]);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const socketRef = useRef(socket);\n  const messagesEndRef = useRef(null);\n\n  const handleCall = useCallback(() => {\n    if (!socketRef.current) {\n      toast.error('Not connected to server');\n      return;\n    }\n    \n    if (isInCall) {\n      socketRef.current.emit('endCall', { targetId: reportData?.targetId });\n      setIsInCall(false);\n      setIsSearching(false);\n      setReportData(null);\n      toast.info('Call ended');\n    } else if (isSearching) {\n      setIsSearching(false);\n      socketRef.current.emit('stopSearching');\n      toast.info('Search stopped');\n    } else {\n      setIsSearching(true);\n      socketRef.current.emit('startCall');\n      toast.info('Searching for a partner...', {\n        autoClose: false,\n        closeOnClick: false,\n        draggable: false\n      });\n    }\n  }, [isInCall, isSearching, reportData, setIsInCall]);\n\n  const setupSocketListeners = useCallback(() => {\n    if (!socketRef.current) return;\n\n    socketRef.current.on('message', (msg) => {\n      setMessages(prev => [...prev, msg]);\n    });\n\n    socketRef.current.on('searchStatus', (data) => {\n      setIsSearching(true);\n      toast.info(data.message, {\n        autoClose: false,\n        closeOnClick: false,\n        draggable: false,\n        toastId: 'searchStatus'\n      });\n    });\n\n    socketRef.current.on('searchTimeout', (data) => {\n      toast.dismiss('searchStatus');\n      toast.warning(data.message, {\n        autoClose: false,\n        closeButton: true,\n        closeOnClick: false,\n        draggable: false,\n        toastId: 'searchTimeout',\n        action: (\n          <>\n            <button \n              onClick={() => {\n                toast.dismiss('searchTimeout');\n                socketRef.current.emit('continueSearching');\n              }}\n              style={{\n                background: '#6C5DD3',\n                color: 'white',\n                border: 'none',\n                padding: '5px 10px',\n                marginRight: '10px',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              Keep Waiting\n            </button>\n            <button \n              onClick={() => {\n                toast.dismiss('searchTimeout');\n                handleCall();\n              }}\n              style={{\n                background: '#FF4B4B',\n                color: 'white',\n                border: 'none',\n                padding: '5px 10px',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              Exit\n            </button>\n          </>\n        )\n      });\n    });\n\n    socketRef.current.on('callStarted', (data) => {\n      setIsInCall(true);\n      setIsSearching(false);\n      setReportData({\n        id: data.callId,\n        targetId: data.targetId,\n        countryCode: data.targetCountry || 'UN'\n      });\n      toast.dismiss('searchStatus');\n      toast.dismiss('searchTimeout');\n      toast.success(`Your partner is from ${getCountryEmoji(data.targetCountry || 'UN')}`);\n    });\n\n    socketRef.current.on('callEnded', () => {\n      setIsInCall(false);\n      setIsSearching(false);\n      setReportData(null);\n      toast.info('Call ended');\n    });\n\n    socketRef.current.on('connect_error', (error) => {\n      console.error('Connection error:', error);\n      toast.error('Connection error. Please try again.');\n      setIsSearching(false);\n    });\n  }, [handleCall, setIsInCall]);\n\n  useEffect(() => {\n    socketRef.current = socket;\n    if (socket) {\n      setupSocketListeners();\n    }\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.off('message');\n        socketRef.current.off('searchStatus');\n        socketRef.current.off('searchTimeout');\n        socketRef.current.off('callStarted');\n        socketRef.current.off('callEnded');\n        socketRef.current.off('connect_error');\n      }\n    };\n  }, [socket, setupSocketListeners]);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleAutoCallChange = (e) => {\n    const enabled = e.target.checked;\n    setAutoCall(enabled);\n    socketRef.current?.emit('updateAutoCall', enabled);\n  };\n\n  const handleMute = () => {\n    setIsMuted(!isMuted);\n  };\n\n  const handleReport = () => {\n    if (!socketRef.current || !reportData) {\n      toast.error('Cannot report: No active call');\n      return;\n    }\n    \n    setShowReport(true);\n    toast.info('Opening report dialog...');\n    \n    // Emit report event to server\n    socketRef.current.emit('reportUser', {\n      targetId: reportData.targetId,\n      callId: reportData.id,\n      country: reportData.countryCode\n    });\n    \n    // End the call after reporting\n    handleCall();\n  };\n\n  const handleReportSubmit = (reportData) => {\n    if (!socketRef.current || !reportData) return;\n    socketRef.current.emit('reportUser', {\n      targetId: reportData.targetId,\n      callId: reportData.id\n    });\n  };\n\n  const handleSendMessage = () => {\n    if (message.trim() && socketRef.current) {\n      const newMessage = {\n        text: message,\n        sender: socketRef.current.id,\n        timestamp: new Date().toISOString(),\n      };\n      socketRef.current.emit('message', newMessage);\n      setMessages(prev => [...prev, newMessage]);\n      setMessage('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const getCountryEmoji = (countryCode) => {\n    if (!countryCode) return '🌐';\n    const codePoints = countryCode\n      .toUpperCase()\n      .split('')\n      .map(char => 127397 + char.charCodeAt());\n    return String.fromCodePoint(...codePoints);\n  };\n\n  return (\n    <ChatContainer>\n      <CallSection>\n        <LogoText>\n          Air<span>Speak</span>\n        </LogoText>\n        <Typography variant=\"caption\" color=\"text.secondary\" align=\"center\" sx={{ mb: 2 }}>\n          {micStatus?.active ? (isMuted ? 'Mic muted' : 'Mic active') : 'Mic inactive - Please allow microphone access'}\n        </Typography>\n        \n        {isSearching && (\n          <Typography \n            variant=\"body1\" \n            color=\"primary\" \n            align=\"center\" \n            sx={{ \n              mb: 2,\n              animation: 'pulse 1.5s infinite',\n              '@keyframes pulse': {\n                '0%': { opacity: 0.6 },\n                '50%': { opacity: 1 },\n                '100%': { opacity: 0.6 }\n              }\n            }}\n          >\n            Searching for partner...\n          </Typography>\n        )}\n\n        {isInCall && reportData && (\n          <Box \n            sx={{ \n              display: 'flex', \n              flexDirection: 'column',\n              alignItems: 'center', \n              gap: 1, \n              mb: 2,\n              backgroundColor: 'rgba(108, 93, 211, 0.1)',\n              padding: '8px 16px',\n              borderRadius: '8px'\n            }}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <Typography \n                variant=\"body2\" \n                sx={{ \n                  color: '#fff',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '8px'\n                }}\n              >\n                Your partner is from {getCountryEmoji(reportData.countryCode)}\n              </Typography>\n            </Box>\n          </Box>\n        )}\n        \n        <ActionButtons>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n            <ActionButton \n              color=\"call\" \n              onClick={handleCall}\n              sx={isSearching || isInCall ? {\n                backgroundColor: '#FF4B4B',\n                '&:hover': {\n                  backgroundColor: '#E53E3E'\n                },\n                marginRight: '16px'\n              } : {\n                marginRight: '16px'\n              }}\n            >\n              {isSearching || isInCall ? <CallIcon sx={{ transform: 'rotate(135deg)' }} /> : <CallIcon />}\n            </ActionButton>\n\n            <ActionButton \n              color=\"mute\" \n              onClick={handleMute} \n              active={isMuted}\n              sx={{ marginRight: '16px' }}\n            >\n              {isMuted ? <MicOffIcon /> : <MicIcon />}\n            </ActionButton>\n\n            <ActionButton \n              color=\"report\" \n              onClick={handleReport}\n              disabled={!isInCall}\n            >\n              <WarningIcon />\n            </ActionButton>\n          </Box>\n        </ActionButtons>\n\n        <Controls>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Checkbox \n              checked={autoCall} \n              onChange={handleAutoCallChange}\n              sx={{ \n                color: 'rgba(255, 255, 255, 0.3)',\n                '&.Mui-checked': {\n                  color: '#6C5DD3',\n                },\n              }}\n            />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Enable Auto Call\n            </Typography>\n          </Box>\n          \n          <Typography \n            variant=\"body2\" \n            sx={{ \n              color: 'text.secondary',\n              cursor: 'pointer',\n              '&:hover': { textDecoration: 'underline' }\n            }}\n            onClick={() => setShowCallHistory(true)}\n          >\n            Call History\n          </Typography>\n\n          <Button \n            onClick={() => setShowSupport(true)}\n            sx={{ \n              color: '#6C5DD3',\n              '&:hover': { backgroundColor: 'rgba(108, 93, 211, 0.1)' }\n            }}\n          >\n            Support Us\n          </Button>\n        </Controls>\n      </CallSection>\n\n      <ChatSection>\n        <MessageList>\n          {messages.map((msg, index) => (\n            <MessageBubble\n              key={index}\n              isUser={msg.sender === socketRef.current?.id}\n            >\n              <Typography variant=\"body2\">{msg.text}</Typography>\n              <Typography \n                variant=\"caption\" \n                sx={{ \n                  display: 'block',\n                  textAlign: msg.sender === socketRef.current?.id ? 'right' : 'left',\n                  opacity: 0.7,\n                  mt: 0.5\n                }}\n              >\n                {new Date(msg.timestamp).toLocaleTimeString()}\n              </Typography>\n            </MessageBubble>\n          ))}\n          <div ref={messagesEndRef} />\n        </MessageList>\n\n        <MessageInput>\n          <StyledTextField\n            fullWidth\n            placeholder=\"Type a message...\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            onKeyPress={handleKeyPress}\n            size=\"small\"\n          />\n          <SendButton onClick={handleSendMessage}>\n            <SendIcon />\n          </SendButton>\n        </MessageInput>\n      </ChatSection>\n\n      {showCallHistory && (\n        <CallHistory\n          open={showCallHistory}\n          onClose={() => setShowCallHistory(false)}\n          history={callHistory}\n        />\n      )}\n\n      {showSupport && (\n        <Support\n          open={showSupport}\n          onClose={() => setShowSupport(false)}\n        />\n      )}\n\n      {showReport && reportData && (\n        <Report\n          open={showReport}\n          onClose={() => setShowReport(false)}\n          reportData={reportData}\n          onReport={handleReportSubmit}\n        />\n      )}\n    </ChatContainer>\n  );\n};\n\nexport default ChatInterface;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Box, CircularProgress, Typography } from '@mui/material';\nimport { toast } from 'react-toastify';\nimport ChatInterface from './ChatInterface';\n\nconst MainContainer = styled(Box)(({ theme }) => ({\n  minHeight: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  background: 'linear-gradient(180deg, #1a1a2e 0%, #16162c 100%)',\n  flex: 1\n}));\n\nconst LoadingContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n  padding: theme.spacing(3),\n  background: 'rgba(0,0,0,0.5)',\n  borderRadius: theme.spacing(1),\n  color: 'white'\n}));\n\nconst VoiceChat = ({ socket }) => {\n  const [isInCall, setIsInCall] = useState(false);\n  const [micStatus, setMicStatus] = useState({ active: false, stream: null });\n\n  const setupMicrophone = useCallback(async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      setMicStatus({ active: true, stream });\n      toast.success('Microphone access granted');\n    } catch (err) {\n      console.error('Microphone error:', err);\n      setMicStatus({ active: false, stream: null });\n      toast.error('Microphone access is required. Please allow microphone access and refresh the page.');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!socket) return;\n    \n    setupMicrophone();\n\n    return () => {\n      if (micStatus.stream) {\n        micStatus.stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [socket, setupMicrophone, micStatus.stream]);\n\n  if (!socket) {\n    return (\n      <MainContainer>\n        <LoadingContainer>\n          <CircularProgress color=\"inherit\" size={40} />\n          <Typography variant=\"body1\">\n            Connecting to server...\n          </Typography>\n        </LoadingContainer>\n      </MainContainer>\n    );\n  }\n\n  return (\n    <MainContainer>\n      <ChatInterface \n        micStatus={micStatus}\n        socket={socket}\n        isInCall={isInCall}\n        setIsInCall={setIsInCall}\n      />\n    </MainContainer>\n  );\n};\n\nexport default VoiceChat;\n"],"names":["StyledDialog","styled","Dialog","_ref","theme","backgroundColor","color","minWidth","maxWidth","CallHistoryItem","ListItem","_ref2","borderBottom","padding","CallButton","IconButton","_ref3","_ref4","open","onClose","callHistory","onCallUser","formatDate","timestamp","date","Date","concat","toLocaleDateString","toLocaleTimeString","renderFlag","countryCode","Flag","Flags","_jsx","Box","component","sx","display","width","height","marginRight","verticalAlign","children","_jsxs","fullWidth","DialogTitle","justifyContent","alignItems","Typography","variant","onClick","CloseIcon","DialogContent","p","gap","Switch","defaultChecked","size","length","py","textAlign","List","map","call","index","disableGutters","participantCountries","ListItemText","primary","secondary","startTime","ListItemSecondaryAction","participants","CallIcon","fontSize","borderRadius","margin","breakpoints","down","PaypalButton","Button","textTransform","marginTop","position","overflow","transition","whiteSpace","transform","boxShadow","content","top","left","background","xs","sm","mb","pl","handlePaypalSupport","window","startIcon","viewBox","fill","xmlns","d","mt","CloseButton","right","ReportButton","reportData","onReport","fontWeight","id","React","style","handleReport","ChatContainer","flexDirection","CallSection","borderRight","ChatSection","flex","MessageList","overflowY","MessageBubble","Paper","isUser","alignSelf","MessageInput","borderTop","LogoText","_ref5","letterSpacing","marginBottom","ActionButtons","ActionButton","_ref6","active","Controls","StyledTextField","TextField","borderColor","SendButton","_ref7","micStatus","socket","isInCall","setIsInCall","autoCall","setAutoCall","useState","showCallHistory","setShowCallHistory","showSupport","setShowSupport","showReport","setShowReport","setReportData","setCallHistory","message","setMessage","messages","setMessages","isMuted","setIsMuted","isSearching","setIsSearching","socketRef","useRef","messagesEndRef","handleCall","useCallback","current","emit","targetId","toast","info","autoClose","closeOnClick","draggable","error","setupSocketListeners","on","msg","prev","data","toastId","dismiss","warning","closeButton","action","_Fragment","border","cursor","callId","targetCountry","success","getCountryEmoji","console","useEffect","off","_messagesEndRef$curre","scrollIntoView","behavior","handleSendMessage","trim","newMessage","text","sender","toISOString","codePoints","toUpperCase","split","char","charCodeAt","String","fromCodePoint","align","animation","opacity","handleMute","MicOffIcon","MicIcon","country","disabled","WarningIcon","Checkbox","checked","onChange","e","_socketRef$current","enabled","target","textDecoration","_socketRef$current2","_socketRef$current3","ref","placeholder","value","onKeyPress","key","shiftKey","preventDefault","SendIcon","CallHistory","history","Support","Report","MainContainer","minHeight","LoadingContainer","spacing","setMicStatus","stream","setupMicrophone","async","navigator","mediaDevices","getUserMedia","audio","err","getTracks","forEach","track","stop","ChatInterface","CircularProgress"],"sourceRoot":""}